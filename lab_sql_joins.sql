-- Write SQL queries to perform the following tasks using the Sakila database:
-- 1. List the number of films per category.
use sakila;
    
SELECT c.name AS category, COUNT(fc.film_id) AS number_of_films  
from sakila.category as c
JOIN film_category as fc
on c.category_id = fc.category_id
group by c.name;

-- 2. Retrieve the store ID, city, and country for each store.

SELECT s.store_id, ci.city, co.country
FROM store as s
JOIN address as a ON s.address_id = a.address_id
JOIN city  as ci ON a.city_id = ci.city_id
JOIN country as co ON ci.country_id = co.country_id;

-- 3. Calculate the total revenue generated by each store in dollars.
SELECT s.store_id, SUM(p.amount) AS total_revenue
FROM payment as p
JOIN rental as r ON p.rental_id = r.rental_id
JOIN inventory as i ON r.inventory_id = i.inventory_id
JOIN store as s ON i.store_id = s.store_id
GROUP BY s.store_id;

-- 4. Determine the average running time of films for each category.

SELECT c.name AS category, AVG(f.length) AS average_running_time
FROM category c
JOIN film_category fc ON c.category_id = fc.category_id
JOIN film f ON fc.film_id = f.film_id
GROUP BY c.name;

-- Bonus:
-- 5. Identify the film categories with the longest average running time.

SELECT c.name AS category, AVG(f.length) AS average_running_time
FROM category c
JOIN film_category fc ON c.category_id = fc.category_id
JOIN film f ON fc.film_id = f.film_id
GROUP BY c.name
ORDER BY average_running_time DESC
LIMIT 1;


-- 6. Display the top 10 most frequently rented movies in descending order.
select * from rental;
select * from inventory;
SELECT f.title, COUNT(r.rental_id) AS rental_count
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY f.title
ORDER BY rental_count DESC
LIMIT 10;

-- 7. Determine if "Academy Dinosaur" can be rented from Store 1.

-- 8. Provide a list of all distinct film titles, along with their availability status in the inventory.
--  Include a column indicating whether each title is 'Available' or 'NOT available.' 
-- Note that there are 42 titles that are not in the inventory, 
-- and this information can be obtained using a CASE statement combined with IFNULL."